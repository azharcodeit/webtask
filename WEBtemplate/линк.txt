using System;
using System.Collections.Generic;
using System.Linq;
namespace pr4
{
class Program
{
public static bool isPerfect(int number)
{
int i = sumFactors(number);
if (i == number)
{
return true;
}
else
return false;
}

public static int sumFactors(int number) 
{
int factor = 0, sum = 0;
for (int i = 1; i < number; i++){
if ((number % i)==0){
factor = i;
sum += factor;
}
}
return sum;
}
public static bool IsPrime(int number)
{
if (number == 1) return false;
if (number == 2) return true;
if (number % 2 == 0) return false;

var boundary = (int)Math.Floor(Math.Sqrt(number));

for (int i = 3; i <= boundary; i+=2)
{
if (number % i == 0) return false;
}

return true; 
}
static void Main(string[] args)
{
int []integers = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17};
string str = "QWERTYU123";
var evens = from integer in integers
where integer%2==0
select integer;
Console.WriteLine("Even Numbers:");
foreach (var i in evens)
{
Console.WriteLine(i);
}
var odds = from integer in integers
where integer%2==1
select integer;
Console.WriteLine("Odd Numbers:");
foreach (var i in odds)
{
Console.WriteLine(i);
}
var primes = from integer in integers
where IsPrime(integer)
select integer;
Console.WriteLine("Prime Numbers:");
foreach (var i in primes)
{
Console.WriteLine(i);
}
var perfects = from integer in integers
where isPerfect(integer)
select integer;
Console.WriteLine("Perfect Numbers:");
foreach (var i in perfects)
{
Console.WriteLine(i);
}
List<Char> vowels = new List<Char>();
vowels.Add('a');
vowels.Add('e');
vowels.Add('u');
vowels.Add('i');
vowels.Add('o');
vowels.Add('A');
vowels.Add('E');
vowels.Add('U');
vowels.Add('I');
vowels.Add('O');
var vowelsInString = from ch in str
where vowels.Contains(ch)
select ch;
Console.WriteLine("Vowels in a string");
foreach (var i in vowelsInString)
{
Console.WriteLine(i);
}
var capitalsInString = from ch in str
where Char.IsUpper(ch)
select ch;
Console.WriteLine("capitals in a string");
foreach (var i in capitalsInString)
{
Console.WriteLine(i);
}
var digitsInString = from ch in str
where Char.IsDigit(ch)
select ch;
Console.WriteLine("Digits in a string");
foreach (var i in digitsInString)
{
Console.WriteLine(i);
}
List<Student> students = new List<Student>();
students.Add(new Student(){Name="Wasya",GPA=3.6,AGE = 25});
students.Add(new Student(){Name="Wadsfa",GPA=2.7,AGE = 15});
students.Add(new Student(){Name="Wsdfya",GPA=2.4,AGE = 17});
students.Add(new Student(){Name="Ldfa",GPA=4.0,AGE = 20});
var biggerGPA = from student in students
where student.GPA > 3.5
select student;
Console.WriteLine("WITH GPA BIGGER THAN 3.5");
foreach (var i in biggerGPA)
{
Console.WriteLine(i.Name + " " + i.GPA);
}
var lessGPA = from student in students
where student.GPA < 2.5
select student;
Console.WriteLine("WITH GPA LESS THAN 2.5");
foreach (var i in lessGPA)
{
Console.WriteLine(i.Name + " " + i.GPA);
}
var oldAge = from student in students
where student.AGE > 18
select student;
Console.WriteLine("WITH AGE BIGGER THAN 18");
foreach (var i in oldAge)
{
Console.WriteLine(i.Name + " " + i.AGE);
}

/*
List<Student> students = new List<Student>();
students.Add(new Student(){ID=1,Name="Wasya",SUBJECT_ID=11});
students.Add(new Student(){ID=2,Name="Wadsfa",SUBJECT_ID=14});
students.Add(new Student(){ID=3,Name="Wsdfya",SUBJECT_ID=21});
students.Add(new Student(){ID=4,Name="Ldfa",SUBJECT_ID=15});
List<Subject> subjects = new List<Subject>();
subjects.Add(new Subject(){Name = "Java",ID = 11});
subjects.Add(new Subject(){Name = "C++",ID = 14});
subjects.Add(new Subject(){Name = "Python",ID = 21});
subjects.Add(new Subject(){Name = "C#",ID = 15});
var joined = from s in students join sub in subjects on s.SUBJECT_ID equals sub.ID select new {
STUDENT_NAME = s.Name , SUBJECT_NAME = sub.Name
};
foreach (var i in joined)
{
Console.WriteLine(i);
}*/
/*
string[] musicalArtists = { "Adele", "Maroon 5", "Avril Lavigne" };

IEnumerable<string> aArtists =
from artist in
musicalArtists
where artist.StartsWith("A")
select artist;

foreach (var artist in aArtists)
{
Console.WriteLine(artist);
}*/
}
class Student {
public string Name{
get;
set;
}
public double GPA{
get;
set;
}
public int AGE{
get;
set;
}
}
}
}